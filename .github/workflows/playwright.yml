name: 🎭 Playwright Tests CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🎭 Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: 🧪 Run Playwright tests
      run: npx playwright test
      env:
        CI: true

    - name: 📊 Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: 📸 Upload test screenshots and videos
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-failures
        path: test-results/
        retention-days: 7

    - name: � Test Results Summary
      if: always()
      run: |
        echo "## 🎭 Playwright Test Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Check if test results exist
        if [ -f "test-results/results.json" ]; then
          echo "### 📊 Test Summary" >> $GITHUB_STEP_SUMMARY
          # Parse test results if jq is available
          if command -v jq &> /dev/null; then
            TOTAL=$(jq '.stats.total' test-results/results.json 2>/dev/null || echo "N/A")
            PASSED=$(jq '.stats.passed' test-results/results.json 2>/dev/null || echo "N/A")
            FAILED=$(jq '.stats.failed' test-results/results.json 2>/dev/null || echo "N/A")
            echo "- Total tests: $TOTAL" >> $GITHUB_STEP_SUMMARY
            echo "- Passed: ✅ $PASSED" >> $GITHUB_STEP_SUMMARY
            echo "- Failed: ❌ $FAILED" >> $GITHUB_STEP_SUMMARY
          fi
        fi
        
        if [ -f "playwright-report/index.html" ]; then
          echo "✅ Test report generated successfully" >> $GITHUB_STEP_SUMMARY
          echo "📊 View detailed results in the uploaded artifacts" >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ Test report not found" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🚀 Application Info" >> $GITHUB_STEP_SUMMARY
        echo "- Server URL: http://localhost:3000" >> $GITHUB_STEP_SUMMARY
        echo "- Test Environment: CI (Ubuntu)" >> $GITHUB_STEP_SUMMARY
        echo "- Browser: Chrome (Desktop)" >> $GITHUB_STEP_SUMMARY